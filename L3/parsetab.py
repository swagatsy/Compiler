
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9F2C1514A0B4E01C6791955370E3D513'
    
_lr_action_items = {'LOGOR':([26,36,37,39,40,44,45,47,67,75,76,77,78,79,80,81,],[-31,-28,53,-26,-25,-30,-29,53,-32,53,-27,-24,-23,-21,-44,-22,]),'NOTEQUAL':([26,36,39,40,41,44,45,67,76,77,78,79,81,],[-31,-28,-26,-25,58,-30,-29,-32,-27,-24,-23,-21,-22,]),'VOID':([0,],[1,]),'EQUAL':([7,10,14,23,26,44,45,],[-19,21,28,-20,-31,-30,-29,]),'WHILE':([6,9,11,13,17,51,68,69,73,74,82,83,86,87,88,90,91,92,93,94,95,97,],[8,8,8,8,8,-10,-18,-17,8,-34,8,-37,-39,-40,-38,-33,-35,8,-41,-42,-36,-43,]),'GREATER':([26,36,39,40,41,44,45,67,76,77,78,79,81,],[-31,-28,-26,-25,66,-30,-29,-32,-27,-24,-23,-21,-22,]),'MINUS':([19,21,26,28,29,36,38,39,40,41,42,43,44,45,46,53,55,56,57,58,59,60,61,62,63,64,65,66,67,76,77,78,79,80,81,],[42,42,-31,42,42,-28,42,-26,-25,65,42,65,-30,-29,65,-50,-51,42,65,-47,42,42,-46,-49,42,42,42,-48,-32,-27,-24,-23,-21,65,-22,]),'RBRACE':([9,11,13,16,17,20,22,27,31,51,68,69,74,83,84,85,86,87,88,90,91,93,94,95,96,97,],[-2,-4,-8,30,-3,-5,-7,-9,-6,-10,-18,-17,-34,-37,90,91,-39,-40,-38,-33,-35,-41,-42,-36,97,-43,]),'RPAREN':([4,26,36,37,39,40,44,45,47,57,67,75,76,77,78,79,80,81,],[5,-31,-28,54,-26,-25,-30,-29,70,76,-32,-45,-27,-24,-23,-21,-44,-22,]),'SEMICOLON':([26,32,34,35,36,39,40,43,44,45,46,49,50,67,71,72,76,77,78,79,81,],[-31,-12,51,-14,-28,-26,-25,68,-30,-29,69,-15,-16,-32,-11,-13,-27,-24,-23,-21,-22,]),'PLUS':([26,36,39,40,41,43,44,45,46,57,67,76,77,78,79,80,81,],[-31,-28,-26,-25,63,63,-30,-29,63,63,-32,-27,-24,-23,-21,63,-22,]),'COMMA':([32,35,49,50,],[48,52,-15,-16,]),'$end':([2,30,],[0,-1,]),'DIVIDE':([26,36,39,40,41,43,44,45,46,57,67,76,77,78,79,80,81,],[-31,-28,-26,-25,59,59,-30,-29,59,59,-32,-27,-24,-23,59,59,59,]),'ASTERISK':([6,9,11,12,13,17,18,19,21,24,25,26,28,29,33,36,38,39,40,41,42,43,44,45,46,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,97,],[12,12,12,25,12,12,33,25,25,25,25,-31,25,25,33,-28,25,-26,-25,60,25,60,-30,-29,60,33,-10,33,-50,12,-51,25,60,-47,25,25,-46,-49,25,25,25,-48,-32,-18,-17,12,12,-34,-27,-24,-23,60,60,60,12,-37,-39,-40,-38,12,-33,-35,12,-41,-42,-36,-43,]),'EQUALS':([26,36,39,40,41,44,45,67,76,77,78,79,81,],[-31,-28,-26,-25,61,-30,-29,-32,-27,-24,-23,-21,-22,]),'NUMBER':([19,21,28,29,38,42,53,55,56,58,59,60,61,62,63,64,65,66,],[36,36,36,36,36,36,-50,-51,36,-47,36,36,-46,-49,36,36,36,-48,]),'AMPERSAND':([12,19,21,24,25,28,29,38,42,53,55,56,58,59,60,61,62,63,64,65,66,],[24,24,24,24,24,24,24,24,24,-50,-51,24,-47,24,24,-46,-49,24,24,24,-48,]),'LPAREN':([3,8,15,19,21,28,29,38,42,53,55,56,58,59,60,61,62,63,64,65,66,],[4,19,29,38,38,38,38,38,38,-50,-51,38,-47,38,38,-46,-49,38,38,38,-48,]),'ELSE':([68,69,83,91,],[-18,-17,89,89,]),'IF':([6,9,11,13,17,51,68,69,73,74,82,83,86,87,88,89,90,91,92,93,94,95,97,],[15,15,15,15,15,-10,-18,-17,15,-34,15,-37,-39,-40,-38,15,-33,-35,15,-41,-42,-36,-43,]),'LBRACE':([5,54,70,89,],[6,73,82,92,]),'NAME':([6,9,11,12,13,17,18,19,21,24,25,28,29,33,38,42,48,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,68,69,70,73,74,82,83,86,87,88,89,90,91,92,93,94,95,97,],[7,7,7,26,7,7,32,26,26,26,26,26,26,50,26,26,32,-10,32,-50,7,-51,26,-47,26,26,-46,-49,26,26,26,-48,-18,-17,7,7,-34,7,-37,-39,-40,-38,7,-33,-35,7,-41,-42,-36,-43,]),'LOGAND':([26,36,37,39,40,44,45,47,67,75,76,77,78,79,80,81,],[-31,-28,55,-26,-25,-30,-29,55,-32,55,-27,-24,-23,-21,-44,-22,]),'INT':([6,9,11,13,17,51,68,69,73,74,82,83,86,87,88,90,91,92,93,94,95,97,],[18,18,18,18,18,-10,-18,-17,18,-34,18,-37,-39,-40,-38,-33,-35,18,-41,-42,-36,-43,]),'LESSER':([26,36,39,40,41,44,45,67,76,77,78,79,81,],[-31,-28,-26,-25,62,-30,-29,-32,-27,-24,-23,-21,-22,]),'MAIN':([1,],[3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'elif':([83,91,],[86,86,]),'function_content':([6,9,11,13,17,73,82,92,],[16,20,22,27,31,84,85,96,]),'while_stat':([6,9,11,13,17,73,82,92,],[17,17,17,17,17,17,17,17,]),'varlist':([18,48,52,],[34,71,72,]),'if_stat':([6,9,11,13,17,73,82,89,92,],[11,11,11,11,11,11,11,93,11,]),'NUMBERvar':([19,21,28,29,38,42,56,59,60,63,64,65,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'assignment_statement':([6,9,11,13,17,54,70,73,82,89,92,],[9,9,9,9,9,74,83,9,9,94,9,]),'sign1':([41,],[64,]),'b_expression':([19,29,56,],[37,47,75,]),'elsepart':([83,91,],[88,95,]),'program':([0,],[2,]),'expression':([19,21,28,29,38,42,56,59,60,63,64,65,],[41,43,46,41,57,67,41,77,78,79,80,81,]),'sign2':([37,47,75,],[56,56,56,]),'declaration':([6,9,11,13,17,73,82,92,],[13,13,13,13,13,13,13,13,]),'var':([12,19,21,24,25,28,29,38,42,56,59,60,63,64,65,],[23,40,40,44,45,40,40,40,40,40,40,40,40,40,40,]),'else':([83,91,],[87,87,]),'pointer':([18,33,48,52,],[35,49,35,35,]),'ID':([6,9,11,13,17,54,70,73,82,89,92,],[14,14,14,14,14,14,14,14,14,14,14,]),'LEFT':([6,9,11,13,17,54,70,73,82,89,92,],[10,10,10,10,10,10,10,10,10,10,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> VOID MAIN LPAREN RPAREN LBRACE function_content RBRACE','program',7,'p_program','150050076-150050096.py',170),
  ('function_content -> assignment_statement','function_content',1,'p_function_content','150050076-150050096.py',183),
  ('function_content -> while_stat','function_content',1,'p_function_content','150050076-150050096.py',184),
  ('function_content -> if_stat','function_content',1,'p_function_content','150050076-150050096.py',185),
  ('function_content -> assignment_statement function_content','function_content',2,'p_function_content2','150050076-150050096.py',191),
  ('function_content -> while_stat function_content','function_content',2,'p_function_content2','150050076-150050096.py',192),
  ('function_content -> if_stat function_content','function_content',2,'p_function_content2','150050076-150050096.py',193),
  ('function_content -> declaration','function_content',1,'p_function_content3','150050076-150050096.py',202),
  ('function_content -> declaration function_content','function_content',2,'p_function_content4','150050076-150050096.py',208),
  ('declaration -> INT varlist SEMICOLON','declaration',3,'p_declaration','150050076-150050096.py',214),
  ('varlist -> NAME COMMA varlist','varlist',3,'p_statlist','150050076-150050096.py',224),
  ('varlist -> NAME','varlist',1,'p_statlist','150050076-150050096.py',225),
  ('varlist -> pointer COMMA varlist','varlist',3,'p_pointerlist','150050076-150050096.py',231),
  ('varlist -> pointer','varlist',1,'p_pointerlist','150050076-150050096.py',232),
  ('pointer -> ASTERISK pointer','pointer',2,'p_pointer','150050076-150050096.py',239),
  ('pointer -> ASTERISK NAME','pointer',2,'p_pointer','150050076-150050096.py',240),
  ('assignment_statement -> ID EQUAL expression SEMICOLON','assignment_statement',4,'p_assignment_statement','150050076-150050096.py',245),
  ('assignment_statement -> LEFT EQUAL expression SEMICOLON','assignment_statement',4,'p_assignment_statement','150050076-150050096.py',246),
  ('ID -> NAME','ID',1,'p_id','150050076-150050096.py',265),
  ('LEFT -> ASTERISK var','LEFT',2,'p_left','150050076-150050096.py',273),
  ('expression -> expression PLUS expression','expression',3,'p_expression','150050076-150050096.py',283),
  ('expression -> expression MINUS expression','expression',3,'p_expression','150050076-150050096.py',284),
  ('expression -> expression ASTERISK expression','expression',3,'p_expression','150050076-150050096.py',285),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','150050076-150050096.py',286),
  ('expression -> var','expression',1,'p_expression2','150050076-150050096.py',327),
  ('expression -> NUMBERvar','expression',1,'p_expression2','150050076-150050096.py',328),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression3','150050076-150050096.py',335),
  ('NUMBERvar -> NUMBER','NUMBERvar',1,'p_numvar','150050076-150050096.py',341),
  ('var -> ASTERISK var','var',2,'p_var','150050076-150050096.py',350),
  ('var -> AMPERSAND var','var',2,'p_var','150050076-150050096.py',351),
  ('var -> NAME','var',1,'p_var','150050076-150050096.py',352),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','150050076-150050096.py',378),
  ('while_stat -> WHILE LPAREN b_expression RPAREN LBRACE function_content RBRACE','while_stat',7,'p_while1','150050076-150050096.py',389),
  ('while_stat -> WHILE LPAREN b_expression RPAREN assignment_statement','while_stat',5,'p_while2','150050076-150050096.py',398),
  ('if_stat -> IF LPAREN b_expression RPAREN LBRACE function_content RBRACE','if_stat',7,'p_if1','150050076-150050096.py',409),
  ('if_stat -> IF LPAREN b_expression RPAREN LBRACE function_content RBRACE elsepart','if_stat',8,'p_if12','150050076-150050096.py',420),
  ('if_stat -> IF LPAREN b_expression RPAREN assignment_statement','if_stat',5,'p_if2','150050076-150050096.py',437),
  ('if_stat -> IF LPAREN b_expression RPAREN assignment_statement elsepart','if_stat',6,'p_if22','150050076-150050096.py',448),
  ('elsepart -> elif','elsepart',1,'p_elsep2','150050076-150050096.py',464),
  ('elsepart -> else','elsepart',1,'p_elsep2','150050076-150050096.py',465),
  ('elif -> ELSE if_stat','elif',2,'p_elif','150050076-150050096.py',472),
  ('else -> ELSE assignment_statement','else',2,'p_else','150050076-150050096.py',480),
  ('else -> ELSE LBRACE function_content RBRACE','else',4,'p_else2','150050076-150050096.py',489),
  ('b_expression -> expression sign1 expression','b_expression',3,'p_bool','150050076-150050096.py',497),
  ('b_expression -> b_expression sign2 b_expression','b_expression',3,'p_bool2','150050076-150050096.py',507),
  ('sign1 -> EQUALS','sign1',1,'p_sign','150050076-150050096.py',517),
  ('sign1 -> NOTEQUAL','sign1',1,'p_sign','150050076-150050096.py',518),
  ('sign1 -> GREATER','sign1',1,'p_sign','150050076-150050096.py',519),
  ('sign1 -> LESSER','sign1',1,'p_sign','150050076-150050096.py',520),
  ('sign2 -> LOGOR','sign2',1,'p_sign1','150050076-150050096.py',527),
  ('sign2 -> LOGAND','sign2',1,'p_sign1','150050076-150050096.py',528),
]
