
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'D43ED0C20B7C9EA478DB6ECD2B1F28D6'
    
_lr_action_items = {'DIVIDE':([23,33,34,35,37,38,39,41,44,50,52,53,54,55,56,],[-27,-26,-25,-24,-22,-21,45,45,45,-28,-23,-20,-19,45,45,]),'LBRACE':([5,],[6,]),'RPAREN':([4,23,33,34,35,37,38,44,50,52,53,54,55,56,],[5,-27,-26,-25,-24,-22,-21,52,-28,-23,-20,-19,-17,-18,]),'NAME':([6,9,10,11,12,17,21,22,26,27,28,31,32,36,40,45,46,47,48,49,51,],[8,16,23,8,8,30,23,23,23,23,16,-6,16,23,23,23,-13,23,23,23,-14,]),'SEMICOLON':([16,18,19,23,29,30,33,34,35,37,38,39,41,42,43,50,52,53,54,55,56,],[-8,31,-10,-27,-11,-12,-26,-25,-24,-22,-21,46,51,-7,-9,-28,-23,-20,-19,-17,-18,]),'INT':([6,11,12,31,46,51,],[9,9,9,-6,-13,-14,]),'VOID':([0,],[1,]),'ASTERISK':([6,9,10,11,12,17,21,22,23,26,27,28,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,],[10,17,22,10,10,17,22,22,-27,22,22,17,-6,17,-26,-25,-24,22,-22,-21,47,22,47,47,22,-13,22,22,22,-28,-14,-23,-20,-19,47,47,]),'EQUAL':([8,13,14,20,23,33,34,],[-15,26,27,-16,-27,-26,-25,]),'RBRACE':([7,11,12,24,25,31,46,51,],[15,-3,-2,-5,-4,-6,-13,-14,]),'PLUS':([23,33,34,35,37,38,39,41,44,50,52,53,54,55,56,],[-27,-26,-25,-24,-22,-21,48,48,48,-28,-23,-20,-19,-17,-18,]),'NUMBER':([26,27,36,40,45,47,48,49,],[35,35,35,35,35,35,35,35,]),'AMPERSAND':([10,21,22,26,27,36,40,45,47,48,49,],[21,21,21,21,21,21,21,21,21,21,21,]),'LPAREN':([3,26,27,36,40,45,47,48,49,],[4,36,36,36,36,36,36,36,36,]),'COMMA':([16,19,29,30,],[28,32,-11,-12,]),'MAIN':([1,],[3,]),'MINUS':([23,26,27,33,34,35,36,37,38,39,40,41,44,45,47,48,49,50,52,53,54,55,56,],[-27,40,40,-26,-25,-24,40,-22,-21,49,40,49,49,40,40,40,40,-28,-23,-20,-19,-17,-18,]),'$end':([2,15,],[0,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function_content':([6,11,12,],[7,24,25,]),'varlist':([9,28,32,],[18,42,43,]),'expression':([26,27,36,40,45,47,48,49,],[39,41,44,50,53,54,55,56,]),'NUMBERvar':([26,27,36,40,45,47,48,49,],[37,37,37,37,37,37,37,37,]),'assignment_statement':([6,11,12,],[11,11,11,]),'program':([0,],[2,]),'declaration':([6,11,12,],[12,12,12,]),'var':([10,21,22,26,27,36,40,45,47,48,49,],[20,33,34,38,38,38,38,38,38,38,38,]),'pointer':([9,17,28,32,],[19,29,19,19,]),'ID':([6,11,12,],[13,13,13,]),'LEFT':([6,11,12,],[14,14,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> VOID MAIN LPAREN RPAREN LBRACE function_content RBRACE','program',7,'p_program','150050076-150050096.py',100),
  ('function_content -> declaration','function_content',1,'p_function_content','150050076-150050096.py',110),
  ('function_content -> assignment_statement','function_content',1,'p_function_content','150050076-150050096.py',111),
  ('function_content -> declaration function_content','function_content',2,'p_function_content','150050076-150050096.py',112),
  ('function_content -> assignment_statement function_content','function_content',2,'p_function_content','150050076-150050096.py',113),
  ('declaration -> INT varlist SEMICOLON','declaration',3,'p_declaration','150050076-150050096.py',117),
  ('varlist -> NAME COMMA varlist','varlist',3,'p_statlist','150050076-150050096.py',127),
  ('varlist -> NAME','varlist',1,'p_statlist','150050076-150050096.py',128),
  ('varlist -> pointer COMMA varlist','varlist',3,'p_pointerlist','150050076-150050096.py',134),
  ('varlist -> pointer','varlist',1,'p_pointerlist','150050076-150050096.py',135),
  ('pointer -> ASTERISK pointer','pointer',2,'p_pointer','150050076-150050096.py',142),
  ('pointer -> ASTERISK NAME','pointer',2,'p_pointer','150050076-150050096.py',143),
  ('assignment_statement -> ID EQUAL expression SEMICOLON','assignment_statement',4,'p_assignment_statement','150050076-150050096.py',148),
  ('assignment_statement -> LEFT EQUAL expression SEMICOLON','assignment_statement',4,'p_assignment_statement','150050076-150050096.py',149),
  ('ID -> NAME','ID',1,'p_id','150050076-150050096.py',157),
  ('LEFT -> ASTERISK var','LEFT',2,'p_left','150050076-150050096.py',161),
  ('expression -> expression PLUS expression','expression',3,'p_expression','150050076-150050096.py',166),
  ('expression -> expression MINUS expression','expression',3,'p_expression','150050076-150050096.py',167),
  ('expression -> expression ASTERISK expression','expression',3,'p_expression','150050076-150050096.py',168),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','150050076-150050096.py',169),
  ('expression -> var','expression',1,'p_expression2','150050076-150050096.py',184),
  ('expression -> NUMBERvar','expression',1,'p_expression2','150050076-150050096.py',185),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression3','150050076-150050096.py',192),
  ('NUMBERvar -> NUMBER','NUMBERvar',1,'p_numvar','150050076-150050096.py',198),
  ('var -> ASTERISK var','var',2,'p_var','150050076-150050096.py',204),
  ('var -> AMPERSAND var','var',2,'p_var','150050076-150050096.py',205),
  ('var -> NAME','var',1,'p_var','150050076-150050096.py',206),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','150050076-150050096.py',219),
]
