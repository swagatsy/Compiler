Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> VOID MAIN LPAREN RPAREN LBRACE function_content RBRACE
Rule 2     function_content -> declaration
Rule 3     function_content -> assignment_statement
Rule 4     function_content -> declaration function_content
Rule 5     function_content -> assignment_statement function_content
Rule 6     declaration -> INT varlist SEMICOLON
Rule 7     varlist -> NAME COMMA varlist
Rule 8     varlist -> NAME
Rule 9     varlist -> pointer COMMA varlist
Rule 10    varlist -> pointer
Rule 11    pointer -> ASTERISK pointer
Rule 12    pointer -> ASTERISK NAME
Rule 13    assignment_statement -> ID EQUAL expression SEMICOLON
Rule 14    assignment_statement -> LEFT EQUAL expression SEMICOLON
Rule 15    ID -> NAME
Rule 16    LEFT -> ASTERISK var
Rule 17    expression -> expression PLUS expression
Rule 18    expression -> expression MINUS expression
Rule 19    expression -> expression ASTERISK expression
Rule 20    expression -> expression DIVIDE expression
Rule 21    expression -> var
Rule 22    expression -> NUMBERvar
Rule 23    expression -> LPAREN expression RPAREN
Rule 24    NUMBERvar -> NUMBER
Rule 25    var -> ASTERISK var
Rule 26    var -> AMPERSAND var
Rule 27    var -> NAME
Rule 28    expression -> MINUS expression

Terminals, with rules where they appear

AMPERSAND            : 26
ASTERISK             : 11 12 16 19 25
COMMA                : 7 9
DIVIDE               : 20
EQUAL                : 13 14
INT                  : 6
LBRACE               : 1
LPAREN               : 1 23
MAIN                 : 1
MINUS                : 18 28
NAME                 : 7 8 12 15 27
NUMBER               : 24
PLUS                 : 17
RBRACE               : 1
RPAREN               : 1 23
SEMICOLON            : 6 13 14
VOID                 : 1
error                : 

Nonterminals, with rules where they appear

ID                   : 13
LEFT                 : 14
NUMBERvar            : 22
assignment_statement : 3 5
declaration          : 2 4
expression           : 13 14 17 17 18 18 19 19 20 20 23 28
function_content     : 1 4 5
pointer              : 9 10 11
program              : 0
var                  : 16 21 25 26
varlist              : 6 7 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . VOID MAIN LPAREN RPAREN LBRACE function_content RBRACE

    VOID            shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> VOID . MAIN LPAREN RPAREN LBRACE function_content RBRACE

    MAIN            shift and go to state 3


state 2

    (0) S' -> program .



state 3

    (1) program -> VOID MAIN . LPAREN RPAREN LBRACE function_content RBRACE

    LPAREN          shift and go to state 4


state 4

    (1) program -> VOID MAIN LPAREN . RPAREN LBRACE function_content RBRACE

    RPAREN          shift and go to state 5


state 5

    (1) program -> VOID MAIN LPAREN RPAREN . LBRACE function_content RBRACE

    LBRACE          shift and go to state 6


state 6

    (1) program -> VOID MAIN LPAREN RPAREN LBRACE . function_content RBRACE
    (2) function_content -> . declaration
    (3) function_content -> . assignment_statement
    (4) function_content -> . declaration function_content
    (5) function_content -> . assignment_statement function_content
    (6) declaration -> . INT varlist SEMICOLON
    (13) assignment_statement -> . ID EQUAL expression SEMICOLON
    (14) assignment_statement -> . LEFT EQUAL expression SEMICOLON
    (15) ID -> . NAME
    (16) LEFT -> . ASTERISK var

    INT             shift and go to state 9
    NAME            shift and go to state 8
    ASTERISK        shift and go to state 10

    function_content               shift and go to state 7
    assignment_statement           shift and go to state 11
    declaration                    shift and go to state 12
    ID                             shift and go to state 13
    LEFT                           shift and go to state 14

state 7

    (1) program -> VOID MAIN LPAREN RPAREN LBRACE function_content . RBRACE

    RBRACE          shift and go to state 15


state 8

    (15) ID -> NAME .

    EQUAL           reduce using rule 15 (ID -> NAME .)


state 9

    (6) declaration -> INT . varlist SEMICOLON
    (7) varlist -> . NAME COMMA varlist
    (8) varlist -> . NAME
    (9) varlist -> . pointer COMMA varlist
    (10) varlist -> . pointer
    (11) pointer -> . ASTERISK pointer
    (12) pointer -> . ASTERISK NAME

    NAME            shift and go to state 16
    ASTERISK        shift and go to state 17

    varlist                        shift and go to state 18
    pointer                        shift and go to state 19

state 10

    (16) LEFT -> ASTERISK . var
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME

    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23

    var                            shift and go to state 20

state 11

    (3) function_content -> assignment_statement .
    (5) function_content -> assignment_statement . function_content
    (2) function_content -> . declaration
    (3) function_content -> . assignment_statement
    (4) function_content -> . declaration function_content
    (5) function_content -> . assignment_statement function_content
    (6) declaration -> . INT varlist SEMICOLON
    (13) assignment_statement -> . ID EQUAL expression SEMICOLON
    (14) assignment_statement -> . LEFT EQUAL expression SEMICOLON
    (15) ID -> . NAME
    (16) LEFT -> . ASTERISK var

    RBRACE          reduce using rule 3 (function_content -> assignment_statement .)
    INT             shift and go to state 9
    NAME            shift and go to state 8
    ASTERISK        shift and go to state 10

    function_content               shift and go to state 24
    assignment_statement           shift and go to state 11
    declaration                    shift and go to state 12
    ID                             shift and go to state 13
    LEFT                           shift and go to state 14

state 12

    (2) function_content -> declaration .
    (4) function_content -> declaration . function_content
    (2) function_content -> . declaration
    (3) function_content -> . assignment_statement
    (4) function_content -> . declaration function_content
    (5) function_content -> . assignment_statement function_content
    (6) declaration -> . INT varlist SEMICOLON
    (13) assignment_statement -> . ID EQUAL expression SEMICOLON
    (14) assignment_statement -> . LEFT EQUAL expression SEMICOLON
    (15) ID -> . NAME
    (16) LEFT -> . ASTERISK var

    RBRACE          reduce using rule 2 (function_content -> declaration .)
    INT             shift and go to state 9
    NAME            shift and go to state 8
    ASTERISK        shift and go to state 10

    function_content               shift and go to state 25
    assignment_statement           shift and go to state 11
    declaration                    shift and go to state 12
    ID                             shift and go to state 13
    LEFT                           shift and go to state 14

state 13

    (13) assignment_statement -> ID . EQUAL expression SEMICOLON

    EQUAL           shift and go to state 26


state 14

    (14) assignment_statement -> LEFT . EQUAL expression SEMICOLON

    EQUAL           shift and go to state 27


state 15

    (1) program -> VOID MAIN LPAREN RPAREN LBRACE function_content RBRACE .

    $end            reduce using rule 1 (program -> VOID MAIN LPAREN RPAREN LBRACE function_content RBRACE .)


state 16

    (7) varlist -> NAME . COMMA varlist
    (8) varlist -> NAME .

    COMMA           shift and go to state 28
    SEMICOLON       reduce using rule 8 (varlist -> NAME .)


state 17

    (11) pointer -> ASTERISK . pointer
    (12) pointer -> ASTERISK . NAME
    (11) pointer -> . ASTERISK pointer
    (12) pointer -> . ASTERISK NAME

    NAME            shift and go to state 30
    ASTERISK        shift and go to state 17

    pointer                        shift and go to state 29

state 18

    (6) declaration -> INT varlist . SEMICOLON

    SEMICOLON       shift and go to state 31


state 19

    (9) varlist -> pointer . COMMA varlist
    (10) varlist -> pointer .

    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 10 (varlist -> pointer .)


state 20

    (16) LEFT -> ASTERISK var .

    EQUAL           reduce using rule 16 (LEFT -> ASTERISK var .)


state 21

    (26) var -> AMPERSAND . var
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME

    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23

    var                            shift and go to state 33

state 22

    (25) var -> ASTERISK . var
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME

    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23

    var                            shift and go to state 34

state 23

    (27) var -> NAME .

    EQUAL           reduce using rule 27 (var -> NAME .)
    SEMICOLON       reduce using rule 27 (var -> NAME .)
    PLUS            reduce using rule 27 (var -> NAME .)
    MINUS           reduce using rule 27 (var -> NAME .)
    ASTERISK        reduce using rule 27 (var -> NAME .)
    DIVIDE          reduce using rule 27 (var -> NAME .)
    RPAREN          reduce using rule 27 (var -> NAME .)


state 24

    (5) function_content -> assignment_statement function_content .

    RBRACE          reduce using rule 5 (function_content -> assignment_statement function_content .)


state 25

    (4) function_content -> declaration function_content .

    RBRACE          reduce using rule 4 (function_content -> declaration function_content .)


state 26

    (13) assignment_statement -> ID EQUAL . expression SEMICOLON
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression ASTERISK expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . var
    (22) expression -> . NUMBERvar
    (23) expression -> . LPAREN expression RPAREN
    (28) expression -> . MINUS expression
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME
    (24) NUMBERvar -> . NUMBER

    LPAREN          shift and go to state 36
    MINUS           shift and go to state 40
    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23
    NUMBER          shift and go to state 35

    var                            shift and go to state 38
    expression                     shift and go to state 39
    NUMBERvar                      shift and go to state 37

state 27

    (14) assignment_statement -> LEFT EQUAL . expression SEMICOLON
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression ASTERISK expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . var
    (22) expression -> . NUMBERvar
    (23) expression -> . LPAREN expression RPAREN
    (28) expression -> . MINUS expression
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME
    (24) NUMBERvar -> . NUMBER

    LPAREN          shift and go to state 36
    MINUS           shift and go to state 40
    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23
    NUMBER          shift and go to state 35

    var                            shift and go to state 38
    NUMBERvar                      shift and go to state 37
    expression                     shift and go to state 41

state 28

    (7) varlist -> NAME COMMA . varlist
    (7) varlist -> . NAME COMMA varlist
    (8) varlist -> . NAME
    (9) varlist -> . pointer COMMA varlist
    (10) varlist -> . pointer
    (11) pointer -> . ASTERISK pointer
    (12) pointer -> . ASTERISK NAME

    NAME            shift and go to state 16
    ASTERISK        shift and go to state 17

    varlist                        shift and go to state 42
    pointer                        shift and go to state 19

state 29

    (11) pointer -> ASTERISK pointer .

    COMMA           reduce using rule 11 (pointer -> ASTERISK pointer .)
    SEMICOLON       reduce using rule 11 (pointer -> ASTERISK pointer .)


state 30

    (12) pointer -> ASTERISK NAME .

    COMMA           reduce using rule 12 (pointer -> ASTERISK NAME .)
    SEMICOLON       reduce using rule 12 (pointer -> ASTERISK NAME .)


state 31

    (6) declaration -> INT varlist SEMICOLON .

    INT             reduce using rule 6 (declaration -> INT varlist SEMICOLON .)
    NAME            reduce using rule 6 (declaration -> INT varlist SEMICOLON .)
    ASTERISK        reduce using rule 6 (declaration -> INT varlist SEMICOLON .)
    RBRACE          reduce using rule 6 (declaration -> INT varlist SEMICOLON .)


state 32

    (9) varlist -> pointer COMMA . varlist
    (7) varlist -> . NAME COMMA varlist
    (8) varlist -> . NAME
    (9) varlist -> . pointer COMMA varlist
    (10) varlist -> . pointer
    (11) pointer -> . ASTERISK pointer
    (12) pointer -> . ASTERISK NAME

    NAME            shift and go to state 16
    ASTERISK        shift and go to state 17

    varlist                        shift and go to state 43
    pointer                        shift and go to state 19

state 33

    (26) var -> AMPERSAND var .

    EQUAL           reduce using rule 26 (var -> AMPERSAND var .)
    SEMICOLON       reduce using rule 26 (var -> AMPERSAND var .)
    PLUS            reduce using rule 26 (var -> AMPERSAND var .)
    MINUS           reduce using rule 26 (var -> AMPERSAND var .)
    ASTERISK        reduce using rule 26 (var -> AMPERSAND var .)
    DIVIDE          reduce using rule 26 (var -> AMPERSAND var .)
    RPAREN          reduce using rule 26 (var -> AMPERSAND var .)


state 34

    (25) var -> ASTERISK var .

    EQUAL           reduce using rule 25 (var -> ASTERISK var .)
    SEMICOLON       reduce using rule 25 (var -> ASTERISK var .)
    PLUS            reduce using rule 25 (var -> ASTERISK var .)
    MINUS           reduce using rule 25 (var -> ASTERISK var .)
    ASTERISK        reduce using rule 25 (var -> ASTERISK var .)
    DIVIDE          reduce using rule 25 (var -> ASTERISK var .)
    RPAREN          reduce using rule 25 (var -> ASTERISK var .)


state 35

    (24) NUMBERvar -> NUMBER .

    SEMICOLON       reduce using rule 24 (NUMBERvar -> NUMBER .)
    PLUS            reduce using rule 24 (NUMBERvar -> NUMBER .)
    MINUS           reduce using rule 24 (NUMBERvar -> NUMBER .)
    ASTERISK        reduce using rule 24 (NUMBERvar -> NUMBER .)
    DIVIDE          reduce using rule 24 (NUMBERvar -> NUMBER .)
    RPAREN          reduce using rule 24 (NUMBERvar -> NUMBER .)


state 36

    (23) expression -> LPAREN . expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression ASTERISK expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . var
    (22) expression -> . NUMBERvar
    (23) expression -> . LPAREN expression RPAREN
    (28) expression -> . MINUS expression
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME
    (24) NUMBERvar -> . NUMBER

    LPAREN          shift and go to state 36
    MINUS           shift and go to state 40
    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23
    NUMBER          shift and go to state 35

    var                            shift and go to state 38
    expression                     shift and go to state 44
    NUMBERvar                      shift and go to state 37

state 37

    (22) expression -> NUMBERvar .

    PLUS            reduce using rule 22 (expression -> NUMBERvar .)
    MINUS           reduce using rule 22 (expression -> NUMBERvar .)
    ASTERISK        reduce using rule 22 (expression -> NUMBERvar .)
    DIVIDE          reduce using rule 22 (expression -> NUMBERvar .)
    SEMICOLON       reduce using rule 22 (expression -> NUMBERvar .)
    RPAREN          reduce using rule 22 (expression -> NUMBERvar .)


state 38

    (21) expression -> var .

    PLUS            reduce using rule 21 (expression -> var .)
    MINUS           reduce using rule 21 (expression -> var .)
    ASTERISK        reduce using rule 21 (expression -> var .)
    DIVIDE          reduce using rule 21 (expression -> var .)
    SEMICOLON       reduce using rule 21 (expression -> var .)
    RPAREN          reduce using rule 21 (expression -> var .)


state 39

    (13) assignment_statement -> ID EQUAL expression . SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . ASTERISK expression
    (20) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 46
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    ASTERISK        shift and go to state 47
    DIVIDE          shift and go to state 45


state 40

    (28) expression -> MINUS . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression ASTERISK expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . var
    (22) expression -> . NUMBERvar
    (23) expression -> . LPAREN expression RPAREN
    (28) expression -> . MINUS expression
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME
    (24) NUMBERvar -> . NUMBER

    LPAREN          shift and go to state 36
    MINUS           shift and go to state 40
    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23
    NUMBER          shift and go to state 35

    var                            shift and go to state 38
    expression                     shift and go to state 50
    NUMBERvar                      shift and go to state 37

state 41

    (14) assignment_statement -> LEFT EQUAL expression . SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . ASTERISK expression
    (20) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 51
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    ASTERISK        shift and go to state 47
    DIVIDE          shift and go to state 45


state 42

    (7) varlist -> NAME COMMA varlist .

    SEMICOLON       reduce using rule 7 (varlist -> NAME COMMA varlist .)


state 43

    (9) varlist -> pointer COMMA varlist .

    SEMICOLON       reduce using rule 9 (varlist -> pointer COMMA varlist .)


state 44

    (23) expression -> LPAREN expression . RPAREN
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . ASTERISK expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 52
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    ASTERISK        shift and go to state 47
    DIVIDE          shift and go to state 45


state 45

    (20) expression -> expression DIVIDE . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression ASTERISK expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . var
    (22) expression -> . NUMBERvar
    (23) expression -> . LPAREN expression RPAREN
    (28) expression -> . MINUS expression
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME
    (24) NUMBERvar -> . NUMBER

    LPAREN          shift and go to state 36
    MINUS           shift and go to state 40
    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23
    NUMBER          shift and go to state 35

    var                            shift and go to state 38
    expression                     shift and go to state 53
    NUMBERvar                      shift and go to state 37

state 46

    (13) assignment_statement -> ID EQUAL expression SEMICOLON .

    INT             reduce using rule 13 (assignment_statement -> ID EQUAL expression SEMICOLON .)
    NAME            reduce using rule 13 (assignment_statement -> ID EQUAL expression SEMICOLON .)
    ASTERISK        reduce using rule 13 (assignment_statement -> ID EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 13 (assignment_statement -> ID EQUAL expression SEMICOLON .)


state 47

    (19) expression -> expression ASTERISK . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression ASTERISK expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . var
    (22) expression -> . NUMBERvar
    (23) expression -> . LPAREN expression RPAREN
    (28) expression -> . MINUS expression
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME
    (24) NUMBERvar -> . NUMBER

    LPAREN          shift and go to state 36
    MINUS           shift and go to state 40
    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23
    NUMBER          shift and go to state 35

    var                            shift and go to state 38
    expression                     shift and go to state 54
    NUMBERvar                      shift and go to state 37

state 48

    (17) expression -> expression PLUS . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression ASTERISK expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . var
    (22) expression -> . NUMBERvar
    (23) expression -> . LPAREN expression RPAREN
    (28) expression -> . MINUS expression
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME
    (24) NUMBERvar -> . NUMBER

    LPAREN          shift and go to state 36
    MINUS           shift and go to state 40
    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23
    NUMBER          shift and go to state 35

    var                            shift and go to state 38
    expression                     shift and go to state 55
    NUMBERvar                      shift and go to state 37

state 49

    (18) expression -> expression MINUS . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression ASTERISK expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . var
    (22) expression -> . NUMBERvar
    (23) expression -> . LPAREN expression RPAREN
    (28) expression -> . MINUS expression
    (25) var -> . ASTERISK var
    (26) var -> . AMPERSAND var
    (27) var -> . NAME
    (24) NUMBERvar -> . NUMBER

    LPAREN          shift and go to state 36
    MINUS           shift and go to state 40
    ASTERISK        shift and go to state 22
    AMPERSAND       shift and go to state 21
    NAME            shift and go to state 23
    NUMBER          shift and go to state 35

    var                            shift and go to state 38
    expression                     shift and go to state 56
    NUMBERvar                      shift and go to state 37

state 50

    (28) expression -> MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . ASTERISK expression
    (20) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 28 (expression -> MINUS expression .)
    MINUS           reduce using rule 28 (expression -> MINUS expression .)
    ASTERISK        reduce using rule 28 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 28 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 28 (expression -> MINUS expression .)
    RPAREN          reduce using rule 28 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! ASTERISK        [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 45 ]


state 51

    (14) assignment_statement -> LEFT EQUAL expression SEMICOLON .

    INT             reduce using rule 14 (assignment_statement -> LEFT EQUAL expression SEMICOLON .)
    NAME            reduce using rule 14 (assignment_statement -> LEFT EQUAL expression SEMICOLON .)
    ASTERISK        reduce using rule 14 (assignment_statement -> LEFT EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 14 (assignment_statement -> LEFT EQUAL expression SEMICOLON .)


state 52

    (23) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    ASTERISK        reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 23 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 23 (expression -> LPAREN expression RPAREN .)


state 53

    (20) expression -> expression DIVIDE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . ASTERISK expression
    (20) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 20 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE expression .)
    ASTERISK        reduce using rule 20 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 20 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! ASTERISK        [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 45 ]


state 54

    (19) expression -> expression ASTERISK expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . ASTERISK expression
    (20) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 19 (expression -> expression ASTERISK expression .)
    MINUS           reduce using rule 19 (expression -> expression ASTERISK expression .)
    ASTERISK        reduce using rule 19 (expression -> expression ASTERISK expression .)
    DIVIDE          reduce using rule 19 (expression -> expression ASTERISK expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression ASTERISK expression .)
    RPAREN          reduce using rule 19 (expression -> expression ASTERISK expression .)

  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! ASTERISK        [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 45 ]


state 55

    (17) expression -> expression PLUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . ASTERISK expression
    (20) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 17 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 17 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 17 (expression -> expression PLUS expression .)
    ASTERISK        shift and go to state 47
    DIVIDE          shift and go to state 45

  ! ASTERISK        [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]


state 56

    (18) expression -> expression MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . ASTERISK expression
    (20) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 18 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 18 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 18 (expression -> expression MINUS expression .)
    ASTERISK        shift and go to state 47
    DIVIDE          shift and go to state 45

  ! ASTERISK        [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]

