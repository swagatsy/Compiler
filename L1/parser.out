Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    PLUS

Grammar

Rule 0     S' -> program
Rule 1     program -> VOID MAIN LPAREN RPAREN LBRACE function_content RBRACE
Rule 2     function_content -> declaration
Rule 3     function_content -> assignment_statement
Rule 4     function_content -> declaration function_content
Rule 5     function_content -> assignment_statement function_content
Rule 6     declaration -> INT statlist SEMICOLON
Rule 7     declaration -> INT pointerlist SEMICOLON
Rule 8     statlist -> statvar COMMA statlist
Rule 9     statlist -> statvar
Rule 10    pointerlist -> pointer COMMA pointerlist
Rule 11    pointerlist -> pointer
Rule 12    pointer -> ASTERISK NAME
Rule 13    statvar -> NAME
Rule 14    assignment_statement -> assignmentlist SEMICOLON
Rule 15    assignmentlist -> singleAssignment COMMA assignmentlist
Rule 16    assignmentlist -> singleAssignment
Rule 17    singleAssignment -> NAME EQUAL AMPERSAND NAME
Rule 18    singleAssignment -> NAME EQUAL pointer
Rule 19    singleAssignment -> NAME EQUAL NAME
Rule 20    singleAssignment -> pointer EQUAL NAME
Rule 21    singleAssignment -> pointer EQUAL AMPERSAND NAME
Rule 22    singleAssignment -> pointer EQUAL pointer
Rule 23    singleAssignment -> pointer EQUAL NUMBER

Terminals, with rules where they appear

AMPERSAND            : 17 21
ASTERISK             : 12
COMMA                : 8 10 15
EQUAL                : 17 18 19 20 21 22 23
INT                  : 6 7
LBRACE               : 1
LPAREN               : 1
MAIN                 : 1
NAME                 : 12 13 17 17 18 19 19 20 21
NUMBER               : 23
PLUS                 : 
RBRACE               : 1
RPAREN               : 1
SEMICOLON            : 6 7 14
VOID                 : 1
error                : 

Nonterminals, with rules where they appear

assignment_statement : 3 5
assignmentlist       : 14 15
declaration          : 2 4
function_content     : 1 4 5
pointer              : 10 11 18 20 21 22 22 23
pointerlist          : 7 10
program              : 0
singleAssignment     : 15 16
statlist             : 6 8
statvar              : 8 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . VOID MAIN LPAREN RPAREN LBRACE function_content RBRACE

    VOID            shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> VOID . MAIN LPAREN RPAREN LBRACE function_content RBRACE

    MAIN            shift and go to state 3


state 2

    (0) S' -> program .



state 3

    (1) program -> VOID MAIN . LPAREN RPAREN LBRACE function_content RBRACE

    LPAREN          shift and go to state 4


state 4

    (1) program -> VOID MAIN LPAREN . RPAREN LBRACE function_content RBRACE

    RPAREN          shift and go to state 5


state 5

    (1) program -> VOID MAIN LPAREN RPAREN . LBRACE function_content RBRACE

    LBRACE          shift and go to state 6


state 6

    (1) program -> VOID MAIN LPAREN RPAREN LBRACE . function_content RBRACE
    (2) function_content -> . declaration
    (3) function_content -> . assignment_statement
    (4) function_content -> . declaration function_content
    (5) function_content -> . assignment_statement function_content
    (6) declaration -> . INT statlist SEMICOLON
    (7) declaration -> . INT pointerlist SEMICOLON
    (14) assignment_statement -> . assignmentlist SEMICOLON
    (15) assignmentlist -> . singleAssignment COMMA assignmentlist
    (16) assignmentlist -> . singleAssignment
    (17) singleAssignment -> . NAME EQUAL AMPERSAND NAME
    (18) singleAssignment -> . NAME EQUAL pointer
    (19) singleAssignment -> . NAME EQUAL NAME
    (20) singleAssignment -> . pointer EQUAL NAME
    (21) singleAssignment -> . pointer EQUAL AMPERSAND NAME
    (22) singleAssignment -> . pointer EQUAL pointer
    (23) singleAssignment -> . pointer EQUAL NUMBER
    (12) pointer -> . ASTERISK NAME

    INT             shift and go to state 15
    NAME            shift and go to state 13
    ASTERISK        shift and go to state 11

    function_content               shift and go to state 14
    singleAssignment               shift and go to state 12
    assignment_statement           shift and go to state 10
    declaration                    shift and go to state 7
    assignmentlist                 shift and go to state 8
    pointer                        shift and go to state 9

state 7

    (2) function_content -> declaration .
    (4) function_content -> declaration . function_content
    (2) function_content -> . declaration
    (3) function_content -> . assignment_statement
    (4) function_content -> . declaration function_content
    (5) function_content -> . assignment_statement function_content
    (6) declaration -> . INT statlist SEMICOLON
    (7) declaration -> . INT pointerlist SEMICOLON
    (14) assignment_statement -> . assignmentlist SEMICOLON
    (15) assignmentlist -> . singleAssignment COMMA assignmentlist
    (16) assignmentlist -> . singleAssignment
    (17) singleAssignment -> . NAME EQUAL AMPERSAND NAME
    (18) singleAssignment -> . NAME EQUAL pointer
    (19) singleAssignment -> . NAME EQUAL NAME
    (20) singleAssignment -> . pointer EQUAL NAME
    (21) singleAssignment -> . pointer EQUAL AMPERSAND NAME
    (22) singleAssignment -> . pointer EQUAL pointer
    (23) singleAssignment -> . pointer EQUAL NUMBER
    (12) pointer -> . ASTERISK NAME

    RBRACE          reduce using rule 2 (function_content -> declaration .)
    INT             shift and go to state 15
    NAME            shift and go to state 13
    ASTERISK        shift and go to state 11

    function_content               shift and go to state 16
    singleAssignment               shift and go to state 12
    assignment_statement           shift and go to state 10
    declaration                    shift and go to state 7
    assignmentlist                 shift and go to state 8
    pointer                        shift and go to state 9

state 8

    (14) assignment_statement -> assignmentlist . SEMICOLON

    SEMICOLON       shift and go to state 17


state 9

    (20) singleAssignment -> pointer . EQUAL NAME
    (21) singleAssignment -> pointer . EQUAL AMPERSAND NAME
    (22) singleAssignment -> pointer . EQUAL pointer
    (23) singleAssignment -> pointer . EQUAL NUMBER

    EQUAL           shift and go to state 18


state 10

    (3) function_content -> assignment_statement .
    (5) function_content -> assignment_statement . function_content
    (2) function_content -> . declaration
    (3) function_content -> . assignment_statement
    (4) function_content -> . declaration function_content
    (5) function_content -> . assignment_statement function_content
    (6) declaration -> . INT statlist SEMICOLON
    (7) declaration -> . INT pointerlist SEMICOLON
    (14) assignment_statement -> . assignmentlist SEMICOLON
    (15) assignmentlist -> . singleAssignment COMMA assignmentlist
    (16) assignmentlist -> . singleAssignment
    (17) singleAssignment -> . NAME EQUAL AMPERSAND NAME
    (18) singleAssignment -> . NAME EQUAL pointer
    (19) singleAssignment -> . NAME EQUAL NAME
    (20) singleAssignment -> . pointer EQUAL NAME
    (21) singleAssignment -> . pointer EQUAL AMPERSAND NAME
    (22) singleAssignment -> . pointer EQUAL pointer
    (23) singleAssignment -> . pointer EQUAL NUMBER
    (12) pointer -> . ASTERISK NAME

    RBRACE          reduce using rule 3 (function_content -> assignment_statement .)
    INT             shift and go to state 15
    NAME            shift and go to state 13
    ASTERISK        shift and go to state 11

    function_content               shift and go to state 19
    singleAssignment               shift and go to state 12
    assignment_statement           shift and go to state 10
    declaration                    shift and go to state 7
    assignmentlist                 shift and go to state 8
    pointer                        shift and go to state 9

state 11

    (12) pointer -> ASTERISK . NAME

    NAME            shift and go to state 20


state 12

    (15) assignmentlist -> singleAssignment . COMMA assignmentlist
    (16) assignmentlist -> singleAssignment .

    COMMA           shift and go to state 21
    SEMICOLON       reduce using rule 16 (assignmentlist -> singleAssignment .)


state 13

    (17) singleAssignment -> NAME . EQUAL AMPERSAND NAME
    (18) singleAssignment -> NAME . EQUAL pointer
    (19) singleAssignment -> NAME . EQUAL NAME

    EQUAL           shift and go to state 22


state 14

    (1) program -> VOID MAIN LPAREN RPAREN LBRACE function_content . RBRACE

    RBRACE          shift and go to state 23


state 15

    (6) declaration -> INT . statlist SEMICOLON
    (7) declaration -> INT . pointerlist SEMICOLON
    (8) statlist -> . statvar COMMA statlist
    (9) statlist -> . statvar
    (10) pointerlist -> . pointer COMMA pointerlist
    (11) pointerlist -> . pointer
    (13) statvar -> . NAME
    (12) pointer -> . ASTERISK NAME

    NAME            shift and go to state 26
    ASTERISK        shift and go to state 11

    pointer                        shift and go to state 28
    statlist                       shift and go to state 24
    pointerlist                    shift and go to state 25
    statvar                        shift and go to state 27

state 16

    (4) function_content -> declaration function_content .

    RBRACE          reduce using rule 4 (function_content -> declaration function_content .)


state 17

    (14) assignment_statement -> assignmentlist SEMICOLON .

    INT             reduce using rule 14 (assignment_statement -> assignmentlist SEMICOLON .)
    NAME            reduce using rule 14 (assignment_statement -> assignmentlist SEMICOLON .)
    ASTERISK        reduce using rule 14 (assignment_statement -> assignmentlist SEMICOLON .)
    RBRACE          reduce using rule 14 (assignment_statement -> assignmentlist SEMICOLON .)


state 18

    (20) singleAssignment -> pointer EQUAL . NAME
    (21) singleAssignment -> pointer EQUAL . AMPERSAND NAME
    (22) singleAssignment -> pointer EQUAL . pointer
    (23) singleAssignment -> pointer EQUAL . NUMBER
    (12) pointer -> . ASTERISK NAME

    NAME            shift and go to state 29
    AMPERSAND       shift and go to state 31
    NUMBER          shift and go to state 30
    ASTERISK        shift and go to state 11

    pointer                        shift and go to state 32

state 19

    (5) function_content -> assignment_statement function_content .

    RBRACE          reduce using rule 5 (function_content -> assignment_statement function_content .)


state 20

    (12) pointer -> ASTERISK NAME .

    EQUAL           reduce using rule 12 (pointer -> ASTERISK NAME .)
    COMMA           reduce using rule 12 (pointer -> ASTERISK NAME .)
    SEMICOLON       reduce using rule 12 (pointer -> ASTERISK NAME .)


state 21

    (15) assignmentlist -> singleAssignment COMMA . assignmentlist
    (15) assignmentlist -> . singleAssignment COMMA assignmentlist
    (16) assignmentlist -> . singleAssignment
    (17) singleAssignment -> . NAME EQUAL AMPERSAND NAME
    (18) singleAssignment -> . NAME EQUAL pointer
    (19) singleAssignment -> . NAME EQUAL NAME
    (20) singleAssignment -> . pointer EQUAL NAME
    (21) singleAssignment -> . pointer EQUAL AMPERSAND NAME
    (22) singleAssignment -> . pointer EQUAL pointer
    (23) singleAssignment -> . pointer EQUAL NUMBER
    (12) pointer -> . ASTERISK NAME

    NAME            shift and go to state 13
    ASTERISK        shift and go to state 11

    assignmentlist                 shift and go to state 33
    pointer                        shift and go to state 9
    singleAssignment               shift and go to state 12

state 22

    (17) singleAssignment -> NAME EQUAL . AMPERSAND NAME
    (18) singleAssignment -> NAME EQUAL . pointer
    (19) singleAssignment -> NAME EQUAL . NAME
    (12) pointer -> . ASTERISK NAME

    AMPERSAND       shift and go to state 35
    NAME            shift and go to state 36
    ASTERISK        shift and go to state 11

    pointer                        shift and go to state 34

state 23

    (1) program -> VOID MAIN LPAREN RPAREN LBRACE function_content RBRACE .

    $end            reduce using rule 1 (program -> VOID MAIN LPAREN RPAREN LBRACE function_content RBRACE .)


state 24

    (6) declaration -> INT statlist . SEMICOLON

    SEMICOLON       shift and go to state 37


state 25

    (7) declaration -> INT pointerlist . SEMICOLON

    SEMICOLON       shift and go to state 38


state 26

    (13) statvar -> NAME .

    COMMA           reduce using rule 13 (statvar -> NAME .)
    SEMICOLON       reduce using rule 13 (statvar -> NAME .)


state 27

    (8) statlist -> statvar . COMMA statlist
    (9) statlist -> statvar .

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 9 (statlist -> statvar .)


state 28

    (10) pointerlist -> pointer . COMMA pointerlist
    (11) pointerlist -> pointer .

    COMMA           shift and go to state 40
    SEMICOLON       reduce using rule 11 (pointerlist -> pointer .)


state 29

    (20) singleAssignment -> pointer EQUAL NAME .

    COMMA           reduce using rule 20 (singleAssignment -> pointer EQUAL NAME .)
    SEMICOLON       reduce using rule 20 (singleAssignment -> pointer EQUAL NAME .)


state 30

    (23) singleAssignment -> pointer EQUAL NUMBER .

    COMMA           reduce using rule 23 (singleAssignment -> pointer EQUAL NUMBER .)
    SEMICOLON       reduce using rule 23 (singleAssignment -> pointer EQUAL NUMBER .)


state 31

    (21) singleAssignment -> pointer EQUAL AMPERSAND . NAME

    NAME            shift and go to state 41


state 32

    (22) singleAssignment -> pointer EQUAL pointer .

    COMMA           reduce using rule 22 (singleAssignment -> pointer EQUAL pointer .)
    SEMICOLON       reduce using rule 22 (singleAssignment -> pointer EQUAL pointer .)


state 33

    (15) assignmentlist -> singleAssignment COMMA assignmentlist .

    SEMICOLON       reduce using rule 15 (assignmentlist -> singleAssignment COMMA assignmentlist .)


state 34

    (18) singleAssignment -> NAME EQUAL pointer .

    COMMA           reduce using rule 18 (singleAssignment -> NAME EQUAL pointer .)
    SEMICOLON       reduce using rule 18 (singleAssignment -> NAME EQUAL pointer .)


state 35

    (17) singleAssignment -> NAME EQUAL AMPERSAND . NAME

    NAME            shift and go to state 42


state 36

    (19) singleAssignment -> NAME EQUAL NAME .

    COMMA           reduce using rule 19 (singleAssignment -> NAME EQUAL NAME .)
    SEMICOLON       reduce using rule 19 (singleAssignment -> NAME EQUAL NAME .)


state 37

    (6) declaration -> INT statlist SEMICOLON .

    INT             reduce using rule 6 (declaration -> INT statlist SEMICOLON .)
    NAME            reduce using rule 6 (declaration -> INT statlist SEMICOLON .)
    ASTERISK        reduce using rule 6 (declaration -> INT statlist SEMICOLON .)
    RBRACE          reduce using rule 6 (declaration -> INT statlist SEMICOLON .)


state 38

    (7) declaration -> INT pointerlist SEMICOLON .

    INT             reduce using rule 7 (declaration -> INT pointerlist SEMICOLON .)
    NAME            reduce using rule 7 (declaration -> INT pointerlist SEMICOLON .)
    ASTERISK        reduce using rule 7 (declaration -> INT pointerlist SEMICOLON .)
    RBRACE          reduce using rule 7 (declaration -> INT pointerlist SEMICOLON .)


state 39

    (8) statlist -> statvar COMMA . statlist
    (8) statlist -> . statvar COMMA statlist
    (9) statlist -> . statvar
    (13) statvar -> . NAME

    NAME            shift and go to state 26

    statvar                        shift and go to state 27
    statlist                       shift and go to state 43

state 40

    (10) pointerlist -> pointer COMMA . pointerlist
    (10) pointerlist -> . pointer COMMA pointerlist
    (11) pointerlist -> . pointer
    (12) pointer -> . ASTERISK NAME

    ASTERISK        shift and go to state 11

    pointerlist                    shift and go to state 44
    pointer                        shift and go to state 28

state 41

    (21) singleAssignment -> pointer EQUAL AMPERSAND NAME .

    COMMA           reduce using rule 21 (singleAssignment -> pointer EQUAL AMPERSAND NAME .)
    SEMICOLON       reduce using rule 21 (singleAssignment -> pointer EQUAL AMPERSAND NAME .)


state 42

    (17) singleAssignment -> NAME EQUAL AMPERSAND NAME .

    COMMA           reduce using rule 17 (singleAssignment -> NAME EQUAL AMPERSAND NAME .)
    SEMICOLON       reduce using rule 17 (singleAssignment -> NAME EQUAL AMPERSAND NAME .)


state 43

    (8) statlist -> statvar COMMA statlist .

    SEMICOLON       reduce using rule 8 (statlist -> statvar COMMA statlist .)


state 44

    (10) pointerlist -> pointer COMMA pointerlist .

    SEMICOLON       reduce using rule 10 (pointerlist -> pointer COMMA pointerlist .)

